{"ast":null,"code":"var _jsxFileName = \"/Users/lumendez/Desktop/grupo rojo/Challenge3/web/frontend/src/components/PayPal.js\";\nimport React, { useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport shoppingCartActions from '../redux/actions/shoppingCartActions';\n\nconst PayPal = props => {\n  const paypal = useRef();\n  useEffect(() => {\n    window.paypal.Buttons({\n      style: {\n        layout: 'vertical',\n        color: 'blue',\n        shape: 'rect',\n        label: 'paypal'\n      },\n      createOrder: (data, actions, err) => {\n        return actions.order.create({\n          intent: 'CAPTURE',\n          purchase_units: [{\n            description: 'Pyral',\n            amount: {\n              value: props.total,\n              currency_code: 'USD'\n            }\n          }]\n        });\n      },\n      onApprove: async (data, actions) => {\n        const order = await actions.order.capture();\n        props.redirect('success');\n        props.finishBuying();\n        localStorage.removeItem(\"carito\");\n        localStorage.setItem(\"carito\", JSON.stringify([]));\n      },\n      onError: err => {\n        console.log(err);\n      }\n    }).render(paypal.current);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    ref: paypal,\n    className: \"buttonsPaypal\",\n    style: {\n      width: '60%',\n      display: 'flex',\n      justifyContent: 'center',\n      paddingTop: '2em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst mapDispatchToProps = {\n  finishBuying: shoppingCartActions.finishBuying\n};\nexport default connect(null, mapDispatchToProps)(PayPal);","map":{"version":3,"sources":["/Users/lumendez/Desktop/grupo rojo/Challenge3/web/frontend/src/components/PayPal.js"],"names":["React","useEffect","useRef","connect","shoppingCartActions","PayPal","props","paypal","window","Buttons","style","layout","color","shape","label","createOrder","data","actions","err","order","create","intent","purchase_units","description","amount","value","total","currency_code","onApprove","capture","redirect","finishBuying","localStorage","removeItem","setItem","JSON","stringify","onError","console","log","render","current","width","display","justifyContent","paddingTop","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,mBAAP,MAAgC,sCAAhC;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACtB,QAAMC,MAAM,GAAGL,MAAM,EAArB;AACAD,EAAAA,SAAS,CAAC,MAAM;AAEZO,IAAAA,MAAM,CAACD,MAAP,CAAcE,OAAd,CAAsB;AAClBC,MAAAA,KAAK,EAAE;AACHC,QAAAA,MAAM,EAAE,UADL;AAEHC,QAAAA,KAAK,EAAE,MAFJ;AAGHC,QAAAA,KAAK,EAAE,MAHJ;AAIHC,QAAAA,KAAK,EAAE;AAJJ,OADW;AAOlBC,MAAAA,WAAW,EAAE,CAACC,IAAD,EAAOC,OAAP,EAAgBC,GAAhB,KAAwB;AACjC,eAAOD,OAAO,CAACE,KAAR,CAAcC,MAAd,CAAqB;AACxBC,UAAAA,MAAM,EAAE,SADgB;AAExBC,UAAAA,cAAc,EAAE,CACZ;AACIC,YAAAA,WAAW,EAAE,OADjB;AAEIC,YAAAA,MAAM,EAAE;AACJC,cAAAA,KAAK,EAAEnB,KAAK,CAACoB,KADT;AAEJC,cAAAA,aAAa,EAAE;AAFX;AAFZ,WADY;AAFQ,SAArB,CAAP;AAaH,OArBiB;AAsBlBC,MAAAA,SAAS,EAAE,OAAOZ,IAAP,EAAaC,OAAb,KAAyB;AAChC,cAAME,KAAK,GAAG,MAAMF,OAAO,CAACE,KAAR,CAAcU,OAAd,EAApB;AACAvB,QAAAA,KAAK,CAACwB,QAAN,CAAe,SAAf;AACAxB,QAAAA,KAAK,CAACyB,YAAN;AACAC,QAAAA,YAAY,CAACC,UAAb,CAAwB,QAAxB;AACAD,QAAAA,YAAY,CAACE,OAAb,CAAqB,QAArB,EAA+BC,IAAI,CAACC,SAAL,CAAe,EAAf,CAA/B;AAEH,OA7BiB;AA8BlBC,MAAAA,OAAO,EAAGnB,GAAD,IAAS;AACdoB,QAAAA,OAAO,CAACC,GAAR,CAAYrB,GAAZ;AACH;AAhCiB,KAAtB,EAiCGsB,MAjCH,CAiCUjC,MAAM,CAACkC,OAjCjB;AAkCH,GApCQ,EAoCN,EApCM,CAAT;AAsCA,sBACI,uDACI;AAAK,IAAA,GAAG,EAAElC,MAAV;AAAkB,IAAA,SAAS,EAAC,eAA5B;AAA4C,IAAA,KAAK,EAAE;AAAEmC,MAAAA,KAAK,EAAE,KAAT;AAAgBC,MAAAA,OAAO,EAAE,MAAzB;AAAiCC,MAAAA,cAAc,EAAE,QAAjD;AAA2DC,MAAAA,UAAU,EAAE;AAAvE,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CA7CD;;AA+CA,MAAMC,kBAAkB,GAAG;AACvBf,EAAAA,YAAY,EAAE3B,mBAAmB,CAAC2B;AADX,CAA3B;AAIA,eAAe5B,OAAO,CAAC,IAAD,EAAO2C,kBAAP,CAAP,CAAkCzC,MAAlC,CAAf","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport { connect } from 'react-redux'\nimport shoppingCartActions from '../redux/actions/shoppingCartActions'\n\nconst PayPal = (props) => {\n    const paypal = useRef()\n    useEffect(() => {\n\n        window.paypal.Buttons({\n            style: {\n                layout: 'vertical',\n                color: 'blue',\n                shape: 'rect',\n                label: 'paypal'\n            },\n            createOrder: (data, actions, err) => {\n                return actions.order.create({\n                    intent: 'CAPTURE',\n                    purchase_units: [\n                        {\n                            description: 'Pyral',\n                            amount: {\n                                value: props.total,\n                                currency_code: 'USD'\n\n                            }\n                        }\n                    ]\n                })\n            },\n            onApprove: async (data, actions) => {\n                const order = await actions.order.capture()\n                props.redirect('success')\n                props.finishBuying()\n                localStorage.removeItem(\"carito\")\n                localStorage.setItem(\"carito\", JSON.stringify([]))\n\n            },\n            onError: (err) => {\n                console.log(err)\n            }\n        }).render(paypal.current)\n    }, [])\n\n    return (\n        <>\n            <div ref={paypal} className='buttonsPaypal' style={{ width: '60%', display: 'flex', justifyContent: 'center', paddingTop: '2em' }}></div>\n        </>\n    )\n}\n\nconst mapDispatchToProps = {\n    finishBuying: shoppingCartActions.finishBuying\n}\n\nexport default connect(null, mapDispatchToProps)(PayPal)\n"]},"metadata":{},"sourceType":"module"}