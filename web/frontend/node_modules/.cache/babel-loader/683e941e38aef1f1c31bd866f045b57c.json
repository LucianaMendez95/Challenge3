{"ast":null,"code":"var _jsxFileName = \"/Users/lumendez/Desktop/grupo rojo/Challenge3/web/frontend/src/components/Address.js\";\nimport React from 'react';\nimport Header from '../components/Header';\nimport '../styles/about.css';\nimport { animateScroll as scroll } from 'react-scroll';\nimport ChatBotComponent from '../components/ChatBotComponent';\nimport Footer from '../components/Footer';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport ChangePass from '../components/ChangePass';\nimport authActions from '../redux/actions/authActions';\nimport { toast } from 'react-toastify';\nimport itemActions from '../redux/actions/itemActions';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nclass Address extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      country: '',\n      city: '',\n      address: '',\n      postalCode: '',\n      postalCode: ''\n    };\n\n    this.readContact = e => {\n      let oneCountry = document.getElementById(\"country\");\n      this.setState({ ...this.state,\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.state = {\n      country: false,\n      city1: false,\n      city2: false,\n      address1: false,\n      address2: false,\n      postalCode1: false,\n      postalCode2: false,\n      postalCode1: false,\n      postalCode2: false\n    };\n\n    this.sendContact = async () => {\n      const uname = RegExp(/^[a-zA-Z0-9._]+$/);\n\n      if (country.firstName === '' || user.lastName === '' || user.mail === '' || user.pass === '') {\n        toast.error(\"please complete all fields\");\n        let country = this.state.country;\n        let city = this.state.city;\n        let address = this.state.address;\n        let postalCode = this.state.postalCode;\n        let phoneNumber = this.state.phoneNumber;\n        await this.props.contact(country, city, address, postalCode, phoneNumber, this.props.userlogged.token); // await this.props.getContact(this.props.userlogged.token)\n      }\n\n      render();\n      console.log(state);\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          maxWidth: '100vw',\n          height: '20vh',\n          background: '#111111',\n          color: 'white',\n          textAlign: 'center',\n          fontSize: '60px',\n          fontWeight: 'bold'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }\n      }, \"My Account\")), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\",\n          margin: '4em',\n          justifyContent: \"space-around\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loginRegister\",\n        style: {\n          display: \"flex\",\n          flexDirection: 'column',\n          padding: '1vh 0vh'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(NavLink, {\n        to: \"/profile\",\n        style: {\n          textDecoration: 'none',\n          color: 'gray'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 98\n        }\n      }, \"Profile\")), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }\n      }, \"Address\", /*#__PURE__*/React.createElement(ChevronRightIcon, {\n        fontSize: \"medium\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 36\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          width: '70%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        style: {\n          padding: '1vh 0vh'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }\n      }, \"Your info\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          boxShadow: '-1px 1px 13px -4px rgba(0,0,0,0.15)',\n          padding: '5vh'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 33\n        }\n      }, \"Contact information\"), this.props.userlogged.contact && /*#__PURE__*/React.createElement(React.Fragment, null, this.props.userlogged.contact.map(x => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            margin: '1vh 0vh'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 56\n          }\n        }, \"Country:\"), \" \", x.country), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 56\n          }\n        }, \"City:\"), \" \", x.city), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 56\n          }\n        }, \"Address:\"), \" \", x.address), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 56\n          }\n        }, \"Postal code:\"), \" \", x.postalCode), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 56\n          }\n        }, \"Phone number:\"), \" \", x.phoneNumber), /*#__PURE__*/React.createElement(\"hr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 53\n          }\n        }));\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"divFormulario\",\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          boxShadow: '-1px 1px 13px -4px rgba(0,0,0,0.15)',\n          padding: '5vh',\n          margin: '2vh 0vh'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 33\n        }\n      }, \"Add your contact information\"), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          margin: '2vh'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        style: {\n          width: '30%'\n        },\n        onChange: this.readContact,\n        type: \"text\",\n        id: \"city\",\n        name: \"city\",\n        placeholder: \"Write your city here\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        style: {\n          width: '30%'\n        },\n        onChange: this.readContact,\n        type: \"text\",\n        id: \"address\",\n        name: \"address\",\n        placeholder: \"Write your address here\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"select\", {\n        style: {\n          width: '30%'\n        },\n        name: \"country\",\n        onChange: this.readContact,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 37\n        }\n      }, this.props.countries.map(country => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          name: \"country\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 52\n          }\n        }, country.country);\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          margin: '2vh'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        style: {\n          width: '45%'\n        },\n        onChange: this.readContact,\n        type: \"number\",\n        id: \"postalCode\",\n        name: \"postalCode\",\n        placeholder: \"Write your postal code here\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        style: {\n          width: '45%'\n        },\n        onChange: this.readContact,\n        type: \"number\",\n        id: \"phoneNumber\",\n        name: \"phoneNumber\",\n        placeholder: \"Write your phone number here\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.sendContact,\n        className: \"createAccount button\",\n        style: {\n          width: '20%',\n          margin: '2vh auto'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 33\n        }\n      }, \"Send information\"))))), /*#__PURE__*/React.createElement(ChatBotComponent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Footer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.scrollToTop();\n    this.props.getCountries();\n  } // componentWillReceiveProps(){\n  //     this.props.userlogged()\n  // }   \n\n\n  scrollToTop() {\n    scroll.scrollToTop();\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userlogged: state.authReducer,\n    countries: state.itemReducer.countries,\n    contact: state.authReducer\n  };\n};\n\nconst mapDispatchToProps = {\n  contact: authActions.postContact,\n  getCountries: itemActions.getCountries,\n  getUser: authActions.logUser // getContact: authActions.getContact\n\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Address);","map":{"version":3,"sources":["/Users/lumendez/Desktop/grupo rojo/Challenge3/web/frontend/src/components/Address.js"],"names":["React","Header","animateScroll","scroll","ChatBotComponent","Footer","connect","NavLink","ChangePass","authActions","toast","itemActions","ChevronRightIcon","Address","Component","state","country","city","address","postalCode","readContact","e","oneCountry","document","getElementById","setState","target","name","value","city1","city2","address1","address2","postalCode1","postalCode2","sendContact","uname","RegExp","firstName","user","lastName","mail","pass","error","phoneNumber","props","contact","userlogged","token","render","console","log","display","flexDirection","justifyContent","maxWidth","height","background","color","textAlign","fontSize","fontWeight","margin","padding","textDecoration","width","boxShadow","map","x","countries","componentDidMount","scrollToTop","getCountries","mapStateToProps","authReducer","itemReducer","mapDispatchToProps","postContact","getUser","logUser"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Header from '../components/Header'\nimport '../styles/about.css'\nimport { animateScroll as scroll } from 'react-scroll'\nimport ChatBotComponent from '../components/ChatBotComponent'\nimport Footer from '../components/Footer'\nimport { connect } from 'react-redux'\nimport { NavLink } from 'react-router-dom'\nimport ChangePass from '../components/ChangePass'\nimport authActions from '../redux/actions/authActions'\nimport { toast } from 'react-toastify';\nimport itemActions from '../redux/actions/itemActions'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\n\nclass Address extends React.Component {\n\n    state = {\n        country: '',\n        city: '',\n        address: '',\n        postalCode: '',\n        postalCode: '',\n    }\n\n  \n\n    componentDidMount() {\n        this.scrollToTop()\n        this.props.getCountries()\n    }\n\n    // componentWillReceiveProps(){\n    //     this.props.userlogged()\n    // }   \n\n    scrollToTop() {\n        scroll.scrollToTop();\n    }\n\n    readContact = e => {\n        let oneCountry = document.getElementById(\"country\")\n        this.setState({\n            ...this.state,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    state ={\n        country: false,\n        city1: false,\n        city2: false,\n        address1: false,\n        address2: false,\n        postalCode1: false,\n        postalCode2: false,\n        postalCode1: false,\n        postalCode2: false,\n    }\n\n    sendContact = async () => {\n        const uname = RegExp(/^[a-zA-Z0-9._]+$/)\n\n        if (country.firstName === '' || user.lastName === '' || user.mail === '' || user.pass === '') {\n            toast.error(\"please complete all fields\")\n        let country = this.state.country\n        let city = this.state.city\n        let address = this.state.address\n        let postalCode = this.state.postalCode\n        let phoneNumber = this.state.phoneNumber\n        await this.props.contact(country, city, address, postalCode, phoneNumber, this.props.userlogged.token)\n        // await this.props.getContact(this.props.userlogged.token)\n    }\n\n    render() \n        console.log(state)\n        return (\n            <>\n\n                <Header />\n                <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', maxWidth: '100vw', height: '20vh', background: '#111111', color: 'white', textAlign: 'center', fontSize: '60px', fontWeight: 'bold' }}>\n                    <p>My Account</p>\n                </div>\n                <div style={{ display: \"flex\", margin: '4em', justifyContent: \"space-around\" }}>\n                    <div className=\"loginRegister\" style={{ display: \"flex\", flexDirection: 'column', padding: '1vh 0vh' }}>\n                        <NavLink to=\"/profile\" style={{ textDecoration: 'none', color: 'gray' }}><h3>Profile</h3></NavLink>\n                        <h3>Address<ChevronRightIcon fontSize=\"medium\" /></h3>\n                    </div>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: '70%' }}>\n                        <h2 style={{ padding: '1vh 0vh' }}>Your info</h2>\n                        <div>\n                            <div style={{ boxShadow: '-1px 1px 13px -4px rgba(0,0,0,0.15)', padding: '5vh' }}>\n                                <h4>Contact information</h4>\n                                {this.props.userlogged.contact &&\n                                    <>\n                                        {this.props.userlogged.contact.map((x) => {\n                                            return (\n                                                <div style={{ margin: '1vh 0vh' }}>\n                                                    <p><strong>Country:</strong> {x.country}</p>\n                                                    <p><strong>City:</strong> {x.city}</p>\n                                                    <p><strong>Address:</strong> {x.address}</p>\n                                                    <p><strong>Postal code:</strong> {x.postalCode}</p>\n                                                    <p><strong>Phone number:</strong> {x.phoneNumber}</p>\n                                                    <hr />\n                                                </div>\n                                            )\n                                        })}\n                                    </>\n                                }\n                            </div>\n\n                            <div id=\"divFormulario\" style={{ display: 'flex', flexDirection: 'column', boxShadow: '-1px 1px 13px -4px rgba(0,0,0,0.15)', padding: '5vh', margin: '2vh 0vh' }}>\n                                <h4>Add your contact information</h4>\n                                <div style={{ display: 'flex', justifyContent: 'space-between', margin: '2vh' }}>\n                                    <input style={{ width: '30%' }} onChange={this.readContact} type=\"text\" id=\"city\" name=\"city\" placeholder=\"Write your city here\" />\n                                    <input style={{ width: '30%' }} onChange={this.readContact} type=\"text\" id=\"address\" name=\"address\" placeholder=\"Write your address here\" />\n                                    <select style={{ width: '30%' }} name=\"country\" onChange={this.readContact} >\n                                        {this.props.countries.map(country => {\n                                            return <option name=\"country\">{country.country}</option>\n                                        })}\n                                    </select>\n                                </div>\n                                <div style={{ display: 'flex', justifyContent: 'space-between', margin: '2vh' }}>\n                                    <input style={{ width: '45%' }} onChange={this.readContact} type=\"number\" id=\"postalCode\" name=\"postalCode\" placeholder=\"Write your postal code here\" />\n                                    <input style={{ width: '45%' }} onChange={this.readContact} type=\"number\" id=\"phoneNumber\" name=\"phoneNumber\" placeholder=\"Write your phone number here\" />\n                                </div>\n                                {/* <div>\n                                    <select>\n                                        {this.props.countries.map(country => {\n                                            return <option onChange={this.readContact} name=\"country\">{country.country}</option>\n                                        })}\n                                    </select>\n                                </div> */}\n                                <button onClick={this.sendContact} className=\"createAccount button\" style={{ width: '20%', margin: '2vh auto' }}>Send information</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <ChatBotComponent />\n                <Footer />\n            </>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        userlogged: state.authReducer,\n        countries: state.itemReducer.countries,\n        contact: state.authReducer\n    }\n}\n\nconst mapDispatchToProps = {\n    contact: authActions.postContact,\n    getCountries: itemActions.getCountries,\n    getUser: authActions.logUser,\n    // getContact: authActions.getContact\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Address)"]},"metadata":{},"sourceType":"module"}