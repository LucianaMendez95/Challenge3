{"ast":null,"code":"var _jsxFileName = \"/Users/lumendez/Desktop/grupo rojo/Challenge3/web/frontend/src/pages/Register.js\";\nimport { connect } from 'react-redux';\nimport { GoogleLogin } from 'react-google-login';\nimport React, { useState } from 'react';\nimport authActions from '../redux/actions/authActions';\nimport '../styles/RegisterLogIn.css';\nimport { NavLink } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { TextareaAutosize } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport mens from '../images/mens.jpg';\n\nconst Register = props => {\n  const [user, setUser] = useState({\n    firstName: '',\n    lastName: '',\n    mail: '',\n    pass: ''\n  });\n\n  const leerImput = e => {\n    const valor = e.target.value;\n    const campo = e.target.name;\n    setUser({ ...user,\n      [campo]: valor\n    });\n  };\n\n  const [mensajes, setMensajes] = useState({\n    firstName1: false,\n    firstName2: false,\n    lastName1: false,\n    lastName2: false,\n    mail1: false,\n    mail2: false,\n    pass1: false,\n    pass2: false\n  });\n\n  const enviarInfo = async e => {\n    e.preventDefault();\n    const uname = RegExp(/^[a-zA-Z0-9._]+$/);\n    const reMail = RegExp(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/);\n    const rePass = RegExp(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*[!{}[\\]@#$%\\^&*)(+=._-]).{5,}/);\n    mensajes.firstName1 = false;\n    mensajes.firstName2 = false;\n    mensajes.lastName1 = false;\n    mensajes.lastName2 = false;\n    mensajes.mail1 = false;\n    mensajes.mail2 = false;\n    mensajes.pass1 = false;\n    mensajes.pass2 = false;\n\n    if (user.firstName === '' || user.lastName === '' || user.mail === '' || user.pass === '') {\n      toast.error(\"please complete all fields\"); // name validation\n    } else if (user.firstName.length < 3) {\n      setMensajes({ ...mensajes,\n        firstName1: true\n      });\n    } else if (!uname.test(user.firstName)) {\n      setMensajes({ ...mensajes,\n        firstName2: true\n      }); // lastName validation\n    } else if (user.lastName.length < 3) {\n      setMensajes({ ...mensajes,\n        lastName1: true\n      });\n    } else if (!uname.test(user.lastName)) {\n      setMensajes({ ...mensajes,\n        lastName2: true\n      }); // mail validation\n    } else if (user.mail.length < 6) {\n      setMensajes({ ...mensajes,\n        mail1: true\n      });\n    } else if (!reMail.test(user.mail)) {\n      setMensajes({ ...mensajes,\n        mail2: true\n      }); // pass validation\n    } else if (user.pass.length < 5) {\n      setMensajes({ ...mensajes,\n        pass1: true\n      });\n    } else if (!rePass.test(user.pass)) {\n      setMensajes({ ...mensajes,\n        pass2: true\n      });\n    } else {\n      await props.newUser(user);\n      toast.error(\"Thank you for Signing Up\");\n    }\n  };\n\n  const responseGoogle = response => {\n    console.log(response);\n    props.newUser({\n      firstName: response.profileObj.givenName,\n      lastName: response.profileObj.familyName,\n      mail: response.profileObj.email,\n      pass: response.profileObj.googleId\n    });\n    toast.success(\"Thank you for signing up\");\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundImage: `url(${mens})`,\n      width: '40%',\n      maxHeight: '100vh',\n      backgroundPosition: 'top right',\n      backgroundSize: 'cover'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"divFormulario\",\n    style: {\n      background: ' whitesmoke',\n      width: '60%',\n      maxHeight: '100vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loginRegister\",\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 29\n    }\n  }, \"Register | \"), /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 49\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      paddingLeft: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 71\n    }\n  }, \" Log in\"))), /*#__PURE__*/React.createElement(GoogleLogin, {\n    id: \"GoogleLogin\",\n    clientId: \"83311303903-m2es1jsjea9eu7fttk0uf0mvd3ofuf3r.apps.googleusercontent.com\",\n    buttonText: \"Sign up with Google\",\n    onSuccess: responseGoogle,\n    onFailure: responseGoogle,\n    cookiePolicy: 'single_host_origin',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"divNombre\",\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 25\n    }\n  }, mensajes.firstName1 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 52\n    }\n  }, \"*Your name must contain at least 3 characters\") : mensajes.firstName2 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 129\n    }\n  }, \"*Your name must contain only uppercase letter, lowercase letter, numbers, numbers, '_' and '.'\") : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 233\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    onChange: leerImput,\n    type: \"text\",\n    id: \"firstName\",\n    name: \"firstName\",\n    placeholder: \"Write your name here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"divApellido\",\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }, mensajes.lastName1 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 51\n    }\n  }, \"*Your lastName must contain at least 3 characters\") : mensajes.lastName2 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 131\n    }\n  }, \"*Your lastName must contain only uppercase letter, lowercase letter, numbers, numbers, '_' and '.'\") : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 239\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    onChange: leerImput,\n    type: \"text\",\n    id: \"lastName\",\n    name: \"lastName\",\n    placeholder: \"Write your last name here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"divMail\",\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 25\n    }\n  }, mensajes.mail1 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 47\n    }\n  }, \"*Your mail must contain at least 6 characters\") : mensajes.mail2 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 119\n    }\n  }, \"*Your mail must be a valid mal, for exaple: 'example@server.com\") : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 192\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    onChange: leerImput,\n    type: \"text\",\n    id: \"mail\",\n    name: \"mail\",\n    placeholder: \"Write your mail here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"divContrase\\xF1a\",\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }\n  }, mensajes.pass1 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 47\n    }\n  }, \"*Your password must contain at least 5 characters\") : mensajes.pass2 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 123\n    }\n  }, \"*Your Password must include at least one uppercase letter, at least one lowercase letter, and at least one number.\") : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 247\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    onChange: leerImput,\n    type: \"password\",\n    id: \"pass\",\n    name: \"pass\",\n    placeholder: \"Write your password here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"HaveAccount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 29\n    }\n  }, \"Have an account?\"), /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/login\",\n    class: \"clickHere\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 29\n    }\n  }, \" Click Here\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: enviarInfo,\n    className: \"createAccount button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  }, \"Create Account\")))));\n};\n\nconst mapDispatchToProps = {\n  newUser: authActions.newUser\n};\nexport default connect(null, mapDispatchToProps)(Register);","map":{"version":3,"sources":["/Users/lumendez/Desktop/grupo rojo/Challenge3/web/frontend/src/pages/Register.js"],"names":["connect","GoogleLogin","React","useState","authActions","NavLink","toast","TextareaAutosize","TextField","mens","Register","props","user","setUser","firstName","lastName","mail","pass","leerImput","e","valor","target","value","campo","name","mensajes","setMensajes","firstName1","firstName2","lastName1","lastName2","mail1","mail2","pass1","pass2","enviarInfo","preventDefault","uname","RegExp","reMail","rePass","error","length","test","newUser","responseGoogle","response","console","log","profileObj","givenName","familyName","email","googleId","success","display","backgroundImage","width","maxHeight","backgroundPosition","backgroundSize","background","paddingLeft","color","mapDispatchToProps"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux'\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport React, { useState } from 'react';\r\nimport authActions from '../redux/actions/authActions'\r\nimport '../styles/RegisterLogIn.css'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { toast } from 'react-toastify';\r\nimport { TextareaAutosize } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport mens from '../images/mens.jpg'\r\n\r\nconst Register = (props) => {\r\n\r\n    const [user, setUser] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        mail: '',\r\n        pass: ''\r\n    })\r\n\r\n    const leerImput = (e) => {\r\n        const valor = e.target.value;\r\n        const campo = e.target.name;\r\n        setUser({\r\n            ...user,\r\n            [campo]: valor\r\n        })\r\n    }\r\n\r\n    const [mensajes, setMensajes] = useState({\r\n        firstName1: false,\r\n        firstName2: false,\r\n        lastName1: false,\r\n        lastName2: false,\r\n        mail1: false,\r\n        mail2: false,\r\n        pass1: false,\r\n        pass2: false,\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n    const enviarInfo = async e => {\r\n        e.preventDefault()\r\n        const uname = RegExp(/^[a-zA-Z0-9._]+$/)\r\n        const reMail = RegExp(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/)\r\n        const rePass = RegExp(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*[!{}[\\]@#$%\\^&*)(+=._-]).{5,}/)\r\n\r\n\r\n\r\n        mensajes.firstName1 = false\r\n        mensajes.firstName2 = false\r\n        mensajes.lastName1 = false\r\n        mensajes.lastName2 = false\r\n        mensajes.mail1 = false\r\n        mensajes.mail2 = false\r\n        mensajes.pass1 = false\r\n        mensajes.pass2 = false\r\n\r\n        if (user.firstName === '' || user.lastName === '' || user.mail === '' || user.pass === '') {\r\n            toast.error(\"please complete all fields\")\r\n\r\n            // name validation\r\n        } else if (user.firstName.length < 3) {\r\n            setMensajes({\r\n                ...mensajes,\r\n                firstName1: true\r\n            })\r\n        } else if (!uname.test(user.firstName)) {\r\n            setMensajes({\r\n                ...mensajes,\r\n                firstName2: true\r\n            })\r\n\r\n            // lastName validation\r\n        } else if (user.lastName.length < 3) {\r\n            setMensajes({\r\n                ...mensajes,\r\n                lastName1: true\r\n            })\r\n        } else if (!uname.test(user.lastName)) {\r\n            setMensajes({\r\n                ...mensajes,\r\n                lastName2: true\r\n            })\r\n\r\n            // mail validation\r\n        } else if (user.mail.length < 6) {\r\n            setMensajes({\r\n                ...mensajes,\r\n                mail1: true\r\n            })\r\n        } else if (!reMail.test(user.mail)) {\r\n            setMensajes({\r\n                ...mensajes,\r\n                mail2: true\r\n            })\r\n\r\n            // pass validation\r\n        } else if (user.pass.length < 5) {\r\n            setMensajes({\r\n                ...mensajes,\r\n                pass1: true\r\n            })\r\n        } else if (!rePass.test(user.pass)) {\r\n            setMensajes({\r\n                ...mensajes,\r\n                pass2: true\r\n            })\r\n\r\n        } else {\r\n            await props.newUser(user)\r\n            toast.error(\"Thank you for Signing Up\")\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const responseGoogle = response => {\r\n        console.log(response)\r\n        props.newUser({\r\n            firstName: response.profileObj.givenName,\r\n            lastName: response.profileObj.familyName,\r\n            mail: response.profileObj.email,\r\n            pass: response.profileObj.googleId,\r\n        })\r\n        toast.success(\"Thank you for signing up\")\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div style={{ display: 'flex' }}>\r\n                <div style={{ backgroundImage: `url(${mens})`, width: '40%', maxHeight: '100vh', backgroundPosition: 'top right', backgroundSize: 'cover' }}>\r\n                </div>\r\n                <div id=\"divFormulario\" style={{ background: ' whitesmoke', width: '60%', maxHeight: '100vh' }}>\r\n                    <form>\r\n                        <div className=\"loginRegister\" style={{ display: \"flex\" }}>\r\n                            <h3>Register | </h3><NavLink to=\"/login\"> <h3 style={{ paddingLeft: '5px' }}> Log in</h3></NavLink>\r\n                        </div>\r\n                        <GoogleLogin id=\"GoogleLogin\"\r\n                            clientId=\"83311303903-m2es1jsjea9eu7fttk0uf0mvd3ofuf3r.apps.googleusercontent.com\"\r\n                            buttonText=\"Sign up with Google\"\r\n                            onSuccess={responseGoogle}\r\n                            onFailure={responseGoogle}\r\n                            cookiePolicy={'single_host_origin'}\r\n                        />\r\n\r\n                        <div id=\"divNombre\" style={{ color: \"red\" }}>\r\n                            {mensajes.firstName1 ? <p>*Your name must contain at least 3 characters</p> : mensajes.firstName2 ? <p>*Your name must contain only uppercase letter, lowercase letter, numbers, numbers, '_' and '.'</p> : <p></p>}\r\n                            <TextField onChange={leerImput} type=\"text\" id=\"firstName\" name=\"firstName\" placeholder=\"Write your name here\"></TextField>\r\n                        </div>\r\n                        <div id=\"divApellido\" style={{ color: \"red\" }}>\r\n                            {mensajes.lastName1 ? <p>*Your lastName must contain at least 3 characters</p> : mensajes.lastName2 ? <p>*Your lastName must contain only uppercase letter, lowercase letter, numbers, numbers, '_' and '.'</p> : <p></p>}\r\n                            <TextField onChange={leerImput} type=\"text\" id=\"lastName\" name=\"lastName\" placeholder=\"Write your last name here\"></TextField>\r\n                        </div>\r\n                        <div id=\"divMail\" style={{ color: \"red\" }}>\r\n                            {mensajes.mail1 ? <p>*Your mail must contain at least 6 characters</p> : mensajes.mail2 ? <p>*Your mail must be a valid mal, for exaple: 'example@server.com</p> : <p></p>}\r\n                            <TextField onChange={leerImput} type=\"text\" id=\"mail\" name=\"mail\" placeholder=\"Write your mail here\"></TextField>\r\n                        </div>\r\n                        <div id=\"divContraseña\" style={{ color: \"red\" }}>\r\n                            {mensajes.pass1 ? <p>*Your password must contain at least 5 characters</p> : mensajes.pass2 ? <p>*Your Password must include at least one uppercase letter, at least one lowercase letter, and at least one number.</p> : <p></p>}\r\n                            <TextField onChange={leerImput} type=\"password\" id=\"pass\" name=\"pass\" placeholder=\"Write your password here\"></TextField>\r\n                        </div>\r\n                        <div id=\"HaveAccount\">\r\n                            <p>Have an account?</p>\r\n                            <NavLink to=\"/login\" class=\"clickHere\"> Click Here</NavLink>\r\n                        </div>\r\n                        <button onClick={enviarInfo} className=\"createAccount button\">Create Account</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    newUser: authActions.newUser,\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Register);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}